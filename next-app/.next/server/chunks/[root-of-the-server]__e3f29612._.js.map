{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/adam/storm-gym/next-app/app/api/auth/login/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { SignJWT } from 'jose'\nimport { cookies } from 'next/headers'\n\nexport async function POST(request: Request) {\n  const { username, password } = await request.json()\n\n  // Hard-coded credentials check\n  if (username === 'storm' && password === '7135') {\n    // Create JWT token using jose\n    const secret = new TextEncoder().encode(process.env.JWT_SECRET || '7135')\n    const token = await new SignJWT({ username })\n      .setProtectedHeader({ alg: 'HS256' })\n      .setIssuedAt()\n      .setExpirationTime('1h')\n      .sign(secret)\n    \n    // Set the JWT as a cookie\n    const cookieStore = await cookies()\n    cookieStore.set({\n      name: 'auth_token',\n      value: token,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'strict',\n      maxAge: 60 * 60, // 1 hour in seconds\n      path: '/'\n    })\n\n    return NextResponse.json({ success: true })\n  }\n\n  return NextResponse.json({ success: false }, { status: 401 })\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,OAAgB;IACzC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;IAEjD,+BAA+B;IAC/B,IAAI,aAAa,WAAW,aAAa,QAAQ;QAC/C,8BAA8B;QAC9B,MAAM,SAAS,IAAI,cAAc,MAAM,CAAC,QAAQ,GAAG,CAAC,UAAU,IAAI;QAClE,MAAM,QAAQ,MAAM,IAAI,uJAAA,CAAA,UAAO,CAAC;YAAE;QAAS,GACxC,kBAAkB,CAAC;YAAE,KAAK;QAAQ,GAClC,WAAW,GACX,iBAAiB,CAAC,MAClB,IAAI,CAAC;QAER,0BAA0B;QAC1B,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;QAChC,YAAY,GAAG,CAAC;YACd,MAAM;YACN,OAAO;YACP,UAAU;YACV,QAAQ,oDAAyB;YACjC,UAAU;YACV,QAAQ,KAAK;YACb,MAAM;QACR;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAM,GAAG;QAAE,QAAQ;IAAI;AAC7D","debugId":null}}]
}