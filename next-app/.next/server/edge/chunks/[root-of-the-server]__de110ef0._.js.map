{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\nimport { jwtVerify } from 'jose'\n\n// Paths that don't require authentication\nconst publicPaths = ['/login', '/api/auth/login']\n\nexport async function middleware(request: NextRequest) {\n  const path = request.nextUrl.pathname\n  \n  // Allow access to public paths without authentication\n  if (publicPaths.some(publicPath => path.startsWith(publicPath))) {\n    return NextResponse.next()\n  }\n  \n  // Check for auth token in cookies\n  const token = request.cookies.get('auth_token')?.value\n  \n  if (!token) {\n    // Redirect to login if no token is found\n    return NextResponse.redirect(new URL('/login', request.url))\n  }\n  \n  try {\n    // Verify the token using jose\n    const secret = new TextEncoder().encode(process.env.JWT_SECRET || '7135')\n    await jwtVerify(token, secret)\n    console.log('Token verified')\n    return NextResponse.next()\n  } catch (error) {\n    // Token is invalid, redirect to login\n    console.log('Token is invalid')\n    console.error('Token verification error:', error)\n    return NextResponse.redirect(new URL('/login', request.url))\n  }\n}\n\n// Configure which paths the middleware applies to\nexport const config = {\n  matcher: [\n    /*\n     * Match all paths except:\n     * 1. /api/auth/login (API routes that handle authentication)\n     * 2. /login (login page)\n     * 3. /_next (Next.js internals)\n     * 4. /static (static files)\n     * 5. /favicon.ico, /robots.txt (common browser requests)\n     */\n    '/((?!api/auth/login|login|_next|static|favicon.ico|robots.txt).*)',\n  ],\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;AAEA,0CAA0C;AAC1C,MAAM,cAAc;IAAC;IAAU;CAAkB;AAE1C,eAAe,WAAW,OAAoB;IACnD,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,sDAAsD;IACtD,IAAI,YAAY,IAAI,CAAC,CAAA,aAAc,KAAK,UAAU,CAAC,cAAc;QAC/D,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,kCAAkC;IAClC,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe;IAEjD,IAAI,CAAC,OAAO;QACV,yCAAyC;QACzC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,IAAI;QACF,8BAA8B;QAC9B,MAAM,SAAS,IAAI,cAAc,MAAM,CAAC,QAAQ,GAAG,CAAC,UAAU,IAAI;QAClE,MAAM,CAAA,GAAA,+JAAA,CAAA,YAAS,AAAD,EAAE,OAAO;QACvB,QAAQ,GAAG,CAAC;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,EAAE,OAAO,OAAO;QACd,sCAAsC;QACtC,QAAQ,GAAG,CAAC;QACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;AACF;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;KAOC,GACD;KACD;AACH"}}]
}